//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IMediaPerson")]
public interface IMediaPerson
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/CreateMedia", ReplyAction="http://tempuri.org/InterfaceWCF/CreateMediaResponse")]
    void CreateMedia(string type, string place, string path);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/CreateMedia", ReplyAction="http://tempuri.org/InterfaceWCF/CreateMediaResponse")]
    System.Threading.Tasks.Task CreateMediaAsync(string type, string place, string path);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/GetMediaByPersonName", ReplyAction="http://tempuri.org/InterfaceWCF/GetMediaByPersonNameResponse")]
    string[] GetMediaByPersonName(string name, string type);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/GetMediaByPersonName", ReplyAction="http://tempuri.org/InterfaceWCF/GetMediaByPersonNameResponse")]
    System.Threading.Tasks.Task<string[]> GetMediaByPersonNameAsync(string name, string type);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/GetMediaByLocation", ReplyAction="http://tempuri.org/InterfaceWCF/GetMediaByLocationResponse")]
    string[] GetMediaByLocation(string type, string place);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/GetMediaByLocation", ReplyAction="http://tempuri.org/InterfaceWCF/GetMediaByLocationResponse")]
    System.Threading.Tasks.Task<string[]> GetMediaByLocationAsync(string type, string place);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/AddPersonToMedia", ReplyAction="http://tempuri.org/InterfaceWCF/AddPersonToMediaResponse")]
    void AddPersonToMedia(string name, string path);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/AddPersonToMedia", ReplyAction="http://tempuri.org/InterfaceWCF/AddPersonToMediaResponse")]
    System.Threading.Tasks.Task AddPersonToMediaAsync(string name, string path);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/RemoveMedia", ReplyAction="http://tempuri.org/InterfaceWCF/RemoveMediaResponse")]
    void RemoveMedia(string path);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/RemoveMedia", ReplyAction="http://tempuri.org/InterfaceWCF/RemoveMediaResponse")]
    System.Threading.Tasks.Task RemoveMediaAsync(string path);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IMediaPersonChannel : IMediaPerson, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class MediaPersonClient : System.ServiceModel.ClientBase<IMediaPerson>, IMediaPerson
{
    
    public MediaPersonClient()
    {
    }
    
    public MediaPersonClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public MediaPersonClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MediaPersonClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MediaPersonClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public void CreateMedia(string type, string place, string path)
    {
        base.Channel.CreateMedia(type, place, path);
    }
    
    public System.Threading.Tasks.Task CreateMediaAsync(string type, string place, string path)
    {
        return base.Channel.CreateMediaAsync(type, place, path);
    }
    
    public string[] GetMediaByPersonName(string name, string type)
    {
        return base.Channel.GetMediaByPersonName(name, type);
    }
    
    public System.Threading.Tasks.Task<string[]> GetMediaByPersonNameAsync(string name, string type)
    {
        return base.Channel.GetMediaByPersonNameAsync(name, type);
    }
    
    public string[] GetMediaByLocation(string type, string place)
    {
        return base.Channel.GetMediaByLocation(type, place);
    }
    
    public System.Threading.Tasks.Task<string[]> GetMediaByLocationAsync(string type, string place)
    {
        return base.Channel.GetMediaByLocationAsync(type, place);
    }
    
    public void AddPersonToMedia(string name, string path)
    {
        base.Channel.AddPersonToMedia(name, path);
    }
    
    public System.Threading.Tasks.Task AddPersonToMediaAsync(string name, string path)
    {
        return base.Channel.AddPersonToMediaAsync(name, path);
    }
    
    public void RemoveMedia(string path)
    {
        base.Channel.RemoveMedia(path);
    }
    
    public System.Threading.Tasks.Task RemoveMediaAsync(string path)
    {
        return base.Channel.RemoveMediaAsync(path);
    }
}
